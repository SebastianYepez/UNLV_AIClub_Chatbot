{"ast":null,"code":"var _jsxFileName = \"/Users/sebastian0571/Downloads/workshop-chatbot/frontend/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport './chatbot.css'; // Correct path for CSS\nimport logo from './logo.jpg'; // Correct path for image\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: \"bot\",\n    text: \"Ask me anything!\"\n  }]); // Start with a default message\n  const [input, setInput] = useState(\"\");\n  const textareaRef = useRef(null); // Reference to the textarea for auto-resize\n\n  // Auto-resize effect for the textarea\n  useEffect(() => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto'; // Reset height to recompute\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`; // Set new height\n    }\n  }, [input]);\n  const handleSendMessage = async () => {\n    if (input.trim() === \"\") return;\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\"); // Clear input after sending\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await response.json();\n      const botMessage = {\n        sender: \"bot\",\n        text: data.response\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"Oops! Something went wrong.\"\n      }]);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault(); // Prevents adding a new line\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Chatbot Logo\",\n          className: \"chat-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"AI & Data Science Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Chatbot Logo\",\n          className: \"chat-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-text\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textareaRef,\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: handleKeyDown,\n          placeholder: \"Type your message...\",\n          className: \"chat-textarea\",\n          rows: 1 // Start small, grows automatically\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(Chatbot, \"IOIqziFUkyF87rIUFKiQ6U33g0Y=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","logo","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","sender","text","input","setInput","textareaRef","current","style","height","scrollHeight","handleSendMessage","trim","userMessage","prev","response","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","error","console","handleKeyDown","e","key","shiftKey","preventDefault","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","ref","value","onChange","target","onKeyDown","placeholder","rows","onClick","_c","$RefreshReg$"],"sources":["/Users/sebastian0571/Downloads/workshop-chatbot/frontend/src/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport './chatbot.css'; // Correct path for CSS\nimport logo from './logo.jpg'; // Correct path for image\n\nfunction Chatbot() {\n    const [messages, setMessages] = useState([{ sender: \"bot\", text: \"Ask me anything!\" }]); // Start with a default message\n    const [input, setInput] = useState(\"\");\n    const textareaRef = useRef(null); // Reference to the textarea for auto-resize\n\n    // Auto-resize effect for the textarea\n    useEffect(() => {\n        if (textareaRef.current) {\n            textareaRef.current.style.height = 'auto'; // Reset height to recompute\n            textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`; // Set new height\n        }\n    }, [input]);\n\n    const handleSendMessage = async () => {\n        if (input.trim() === \"\") return;\n\n        const userMessage = { sender: \"user\", text: input };\n        setMessages(prev => [...prev, userMessage]);\n\n        setInput(\"\"); // Clear input after sending\n\n        try {\n            const response = await fetch(\"http://127.0.0.1:5000/chat\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ message: input }),\n            });\n\n            const data = await response.json();\n\n            const botMessage = { sender: \"bot\", text: data.response };\n            setMessages(prev => [...prev, botMessage]);\n        } catch (error) {\n            console.error(\"Error sending message:\", error);\n            setMessages(prev => [...prev, { sender: \"bot\", text: \"Oops! Something went wrong.\" }]);\n        }\n    };\n\n    const handleKeyDown = (e) => {\n        if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault(); // Prevents adding a new line\n            handleSendMessage();\n        }\n    };\n\n    return (\n        <div className=\"chatbot-page\">\n            <div className=\"chat-container\">\n                <header className=\"chat-header\">\n                    <img src={logo} alt=\"Chatbot Logo\" className=\"chat-logo\" />\n                    <h3>AI & Data Science Chatbot</h3>\n                    <img src={logo} alt=\"Chatbot Logo\" className=\"chat-logo\" />\n                </header>\n\n                <div className=\"chat-box\">\n                    {messages.map((msg, index) => (\n                        <div key={index} className={`message ${msg.sender}`}>\n                            <div className=\"message-text\">{msg.text}</div>\n                        </div>\n                    ))}\n                </div>\n\n                <div className=\"input-area\">\n                    <textarea\n                        ref={textareaRef}\n                        value={input}\n                        onChange={(e) => setInput(e.target.value)}\n                        onKeyDown={handleKeyDown}\n                        placeholder=\"Type your message...\"\n                        className=\"chat-textarea\"\n                        rows={1} // Start small, grows automatically\n                    />\n                    <button onClick={handleSendMessage} className=\"send-button\">Send</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}